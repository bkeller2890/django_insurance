# Generated by Django 5.0.6 on 2024-07-08 01:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('suffix', models.CharField(blank=True)),
                ('apt_number', models.CharField(blank=True)),
                ('date_of_birth', models.DateField()),
                ('address', models.CharField(max_length=50)),
                ('zip_code', models.CharField(default=0)),
                ('telephone_number', models.IntegerField()),
                ('email_address', models.CharField(max_length=50)),
                ('home_ownership', models.CharField(choices=[('OWN', 'Owns_Property'), ('RENT', 'Rents_Property')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Driver_First_Name', models.CharField(max_length=50)),
                ('Driver_Last_Name', models.CharField(max_length=50)),
                ('Driver_Relation', models.CharField(max_length=50, verbose_name=(('SELF, Self', ('GRANDFATHER', 'Grandfather'), ('GRANDMOTHER', 'Grandmother'), ('SPOUSE', 'Spouse'), ('DOMESTIC PARTNER', 'Domestic Partner'), ('SON', 'Son'), ('DAUGHTER', 'Daughter'), ('FATHER', 'Father'), ('MOTHER', 'Mother'), ('FATHER IN LAW', 'Father in law'), ('MOTHER IN LAW', 'Mother in Law'), ('FIANCE', 'Fiance'), ('FRIEND', 'Friend'), ('OTHER', 'Other')),))),
                ('Drivers_License_State', models.CharField(max_length=30, verbose_name=(('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'Washington D.C.'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')))),
                ('Drivers_License_Number', models.CharField(max_length=30)),
                ('Drivers_License_Status', models.CharField(max_length=50, verbose_name=(('ACTIVE LICENSE', 'Active License'), ('LEARNERS PERMIT', 'Permit License'), ('COMMERCIAL LICENSE', 'Commerical License'), ('FOREIGN LICENSE', 'Foreign License'), ('INTERNATION LICENSE', 'International License'), ('SUSPENDED LICENSE', 'Suspended License'), ('EXPIRED LICENSE', 'Expired License'), ('NOT LICENSED TO DRIVE', 'Not licensed to drive')))),
                ('gender', models.CharField(max_length=30, verbose_name=(('MALE', 'Male'), ('FEMALE', 'Female'), ('NONBINARY', 'NonBinary'), ('NOANSWER', 'Prefer Not to Answer')))),
                ('date_of_issuance', models.DateField()),
                ('job_status', models.CharField(max_length=50, verbose_name=(('FULL_TIME_EMPLOYED', 'Full Time Employed'), ('PART_TIME_EMPLOYED', 'Part Time Employed'), ('STUDENT', 'Student'), ('HOMEMAKER', 'Homemaker'), ('UNEMPLOYED', 'Unemployed')))),
                ('education', models.CharField(max_length=35, verbose_name=(('LESS THAN HIGHSCHOOL', 'Less than highschool'), ('HIGHSCHOOL', 'Highschool'), ('VOCATIONAL', 'Vocational'), ('ASSOCIATE', 'Associate'), ('Bachelors', 'Bachelors'), ('PHD', 'Phd'), ('DOCTORS', 'Doctor'), ('LAWYER', 'Lawyer')))),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_Identification_Number', models.CharField(max_length=30)),
                ('Usage_Type', models.CharField(blank=True, choices=[('PLEASURE', 'Pleasure Vehicle'), ('WORK', 'Work/School'), ('BUSINESS', 'Business'), ('COMMERCIAL', 'Commercial')], max_length=11)),
                ('Annual_Mileage', models.IntegerField()),
                ('Year', models.IntegerField()),
                ('Make', models.CharField(max_length=30)),
                ('Model', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reference_Number', models.CharField(max_length=30)),
                ('Price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.customer')),
                ('Drivers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.drivers')),
                ('Vehicles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.vehicle')),
            ],
        ),
    ]
